# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/104JVxFlaKxe1vb0SJ3JRmjtJoAlBUN_z
"""

from IPython.core.display import Image
from numpy.lib.function_base import append
import numpy as np
from google.colab.patches import cv2_imshow
import cv2 # 導入OpenCV函式庫
from google.colab import files

#==========================load image and xyz file==========================
img = cv2.imread('/content/TextureImage.JPG')
xyz = np.loadtxt('/content/M11012002.xyz')
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)


color = []#RGB array

#==========================picked points in 3D point cloud==========================
zero = np.zeros(4).astype(int)
X = np.array([[9,-55,179,1],[10,-31,164,1],[9,37,168,1],[3,-29,170,1],
              [15,-30,171,1],[-12,22,169,1],[34,37,176,1]])

#==========================picked points in image==========================
uv = np.array([[154,1366,1],[580,1280,1],[2142,1270,1],[616,1168,1],
              [652,1444,1],[1730,799,1],[2106,1806,1]])

# ==========================find projective matrix===========================
Puv = np.zeros(shape=(14,12))
for i in range(7):
  Puv[2*i] = np.concatenate((X[i], zero, -uv[i,0]*X[i]))
  Puv[2*i+1] = np.concatenate((zero, X[i], -uv[i,1]*X[i]))

Up, Sp, Vpt = np.linalg.svd(Puv)
Vp = Vpt.T

P = np.vstack((np.vstack((Vp[0:4,11],Vp[4:8,11])),Vp[8:12,11]))

P = P/P[2,3]
# ==========================================================================

# =======P*X to get 3D point cloud corresponding point in image==============
for i in range(len(xyz)):
  wp = np.append(xyz[i],1)
  ip = np.dot(P,wp)
  ip = ip/ip[2] #normalize let ip[2] = 1
  ip = ip.astype(int)
  # print(ip)
  color.append(img_rgb[ip[0],ip[1]])#append RGB valne to color array

color = np.array(color)
# print(color)

xyz_rgb = np.concatenate([xyz, color], axis = 1)#combine XYZ and RGB valne 
np.savetxt('M11012002_coloe.xyz', xyz_rgb)
files.download("M11012002_color.xyz")